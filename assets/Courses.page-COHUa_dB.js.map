{"version":3,"file":"Courses.page-COHUa_dB.js","sources":["../../src/redux/slices/course.slice.ts","../../src/redux/actions/course.actions.ts","../../src/pages/Courses.page.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Course } from '@models/course.modals';\n\nexport interface CourseState {\n    courses: Course[];\n    isLoading: boolean;\n    error: string | null;\n}\n\nconst initialState: CourseState = {\n    courses: [],\n    isLoading: false,\n    error: null,\n};\n\nexport const courseSlice = createSlice({\n    name: 'course',\n    initialState,\n    reducers: {\n        fetchCoursesStart: (state) => {\n            state.isLoading = true;\n            state.error = null;\n        },\n        fetchCoursesSuccess: (state, action: PayloadAction<Course[]>) => {\n            state.courses = action.payload;\n            state.isLoading = false;\n            state.error = null;\n        },\n        fetchCoursesFailure: (state, action: PayloadAction<string>) => {\n            state.isLoading = false;\n            state.error = action.payload;\n        },\n        fetchCourseByIdStart: (state) => {\n            state.isLoading = true;\n            state.error = null;\n        },\n        fetchCourseByIdSuccess: (state, action: PayloadAction<Course>) => {\n            state.courses = action.payload;\n            state.isLoading = false;\n            state.error = null;\n        },\n        fetchCourseByIdFailure: (state, action: PayloadAction<string>) => {\n            state.isLoading = false;\n            state.error = action.payload;\n        },\n        createCourseStart: (state) => {\n            state.isLoading = true;\n            state.error = null;\n        },\n        createCourseSuccess: (state, action: PayloadAction<Course>) => {\n            state.courses = action.payload;\n            state.isLoading = false;\n            state.error = null;\n        },\n        createCourseFailure: (state, action: PayloadAction<string>) => {\n            state.isLoading = false;\n            state.error = action.payload;\n        },\n        updateCourseStart: (state) => {\n            state.isLoading = true;\n            state.error = null;\n        },\n        updateCourseSuccess: (state, action: PayloadAction<Course>) => {\n            state.courses = action.payload;\n            state.isLoading = false;\n            state.error = null;\n        },\n        updateCourseFailure: (state, action: PayloadAction<string>) => {\n            state.isLoading = false;\n            state.error = action.payload;\n        },\n        deleteCourseStart: (state) => {\n            state.isLoading = true;\n            state.error = null;\n        },\n        deleteCourseSuccess: (state, action: PayloadAction<string>) => {\n            state.courses = state.courses.filter((course) => course._id !== action.payload);\n            state.isLoading = false;\n            state.error = null;\n        },\n        deleteCourseFailure: (state, action: PayloadAction<string>) => {\n            state.isLoading = false;\n            state.error = action.payload;\n        },\n    },\n});\n\nexport const {\n    fetchCoursesStart,\n    fetchCoursesSuccess,\n    fetchCoursesFailure,\n    fetchCourseByIdStart,\n    fetchCourseByIdSuccess,\n    fetchCourseByIdFailure,\n    createCourseStart,\n    createCourseSuccess,\n    createCourseFailure,\n    updateCourseStart,\n    updateCourseSuccess,\n    updateCourseFailure,\n    deleteCourseStart,\n    deleteCourseSuccess,\n    deleteCourseFailure,\n} = courseSlice.actions;\n\nexport default courseSlice.reducer;","\n\n\nimport { Course } from '../../models/course.modal';\nimport { AppDispatch } from '../store';\nimport { createCourseStart, createCourseSuccess, deleteCourseStart, deleteCourseSuccess, fetchCourseByIdStart, fetchCourseByIdSuccess, fetchCoursesStart, fetchCoursesSuccess, updateCourseStart, updateCourseSuccess } from '../slices/course.slice';\nimport { toast } from 'react-toastify';\nimport { courseApi } from '@api/api';\n\nconst fetchCourses = () => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(fetchCoursesStart());\n        const response = await courseApi.getCourses();\n        console.log(response)\n        dispatch(fetchCoursesSuccess(response.data.data));\n    } catch (error) {\n        toast.error(error.response?.data?.data || 'Failed to fetch courses', {\n            autoClose: 3000,\n        });\n    }\n};\n\nconst fetchCourseById = (id: string) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(fetchCourseByIdStart()); // Set loading state to true\n        const response = await courseApi.getCourseById(id);\n        // console.log(response.data)\n        dispatch(fetchCourseByIdSuccess(response.data.data)); // Pass data to success action\n    } catch (error) {\n        toast.error(error.response.data.data || 'Failed to fetch course', {\n            autoClose: 3000, // Auto close after 3 seconds\n        });\n    }\n};\n\nconst createCourse = (course: Course) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(createCourseStart()); // Set loading state to true\n        const response = await courseApi.createCourse(course);\n        dispatch(createCourseSuccess(response.data.data)); // Pass data to success action\n        return response.data;\n    } catch (error) {\n        toast.error(error.response.data.data || 'Failed to fetch course', {\n            autoClose: 3000, // Auto close after 3 seconds\n        });\n    }\n};\n\nconst updateCourse = (course: Omit<Course, 'createdAt' | 'updatedAt'>) => async (dispatch: AppDispatch) => {\n    try {\n        // console.log(organization)\n        dispatch(updateCourseStart()); // Set loading state to true\n        const response = await courseApi.updateCourse(course, course.id);\n        dispatch(updateCourseSuccess(response.data.data)); // Pass data to success action\n        return response.data;\n    } catch (error) {\n        toast.error(error.response.data.data || 'Failed to fetch course', {\n            autoClose: 3000, // Auto close after 3 seconds\n        });\n    }\n};\n\nconst deleteCourse = (id: string) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(deleteCourseStart());\n        const response = await courseApi.deleteCourse(id);\n        dispatch(deleteCourseSuccess(id));\n        toast.info(response.message || 'Course deleted successfully', {\n            autoClose: 3000,\n        });\n    } catch (error) {\n        // console.log(error)\n        toast.error(error.response.data.data || 'Failed to fetch course', {\n            autoClose: 3000,\n        });\n    }\n};\n\n\nexport const courseActions = {\n    fetchCourses,\n    fetchCourseById,\n    createCourse,\n    updateCourse,\n    deleteCourse,\n}","import { courseActions } from \"@redux/actions/course.actions\";\nimport { AppDispatch } from \"@redux/store\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nfunction CoursesPage() {\n    const dispatch = useDispatch<AppDispatch>()\n    \n    useEffect(() => {\n        dispatch(courseActions.fetchCourses())\n    }, [])\n\n    return (\n        <div>CoursesPage</div>\n    )\n}\n\nexport default CoursesPage"],"names":["initialState","courseSlice","createSlice","state","action","course","fetchCoursesStart","fetchCoursesSuccess","fetchCoursesFailure","fetchCourseByIdStart","fetchCourseByIdSuccess","fetchCourseByIdFailure","createCourseStart","createCourseSuccess","createCourseFailure","updateCourseStart","updateCourseSuccess","updateCourseFailure","deleteCourseStart","deleteCourseSuccess","deleteCourseFailure","fetchCourses","dispatch","response","courseApi","error","toast","_b","_a","fetchCourseById","id","createCourse","updateCourse","deleteCourse","courseActions","CoursesPage","useDispatch","useEffect","jsx"],"mappings":"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"}