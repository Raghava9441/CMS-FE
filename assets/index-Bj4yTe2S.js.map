{"version":3,"file":"index-Bj4yTe2S.js","sources":["../../src/components/LoadingScreen.tsx","../../node_modules/char-regex/index.js","../../node_modules/stringz/dist/index.js","../../src/utils/truncateText.ts","../../src/components/conversation/chat elements/AllChatElements.tsx","../../src/data/index.ts"],"sourcesContent":["import { Box, Stack, useTheme } from \"@mui/material\";\nimport SchoolIcon from '@mui/icons-material/School';\n\nconst LoadingScreen = ({ fromChat }: { fromChat: boolean }) => {\n    // using theme\n    const theme = useTheme();\n\n    // Check if /auth is present in the URL\n    const isAuthRoute = window.location.pathname.includes(\"/auth\");\n\n    let height, width;\n\n    if (isAuthRoute) {\n        height = \"50vh\";\n        width = \"100%\";\n    } else if (fromChat) {\n        height = \"100%\";\n        width = \"100%\";\n    } else {\n        height = \"100vh\";\n        width = \"100vw\";\n    }\n\n    return (\n        <Stack\n            height={height}\n            width={width}\n            direction={\"row\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n        >\n            <Stack\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                position={\"relative\"}\n                direction={\"row\"}\n                sx={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    borderRadius: \"50%\",\n                    backgroundColor: theme.palette.background.default,\n                    boxShadow: `0px 0px 0px 2px ${theme.palette.primary.light}`,\n                    animation:\n                        \"spin 2.5s cubic-bezier(0.75, 0, 0, 0.75) forwards infinite\",\n                    \"&:before\": {\n                        content: \"''\",\n                        display: \"block\",\n                        position: \"absoulte\",\n                        top: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                        left: \"5px\",\n                        border: `1px solid ${theme.palette.primary.light}`,\n                        borderRadius: \"50%\",\n                    },\n                    \"&:after\": {\n                        content: \"''\",\n                        display: \"block\",\n                        position: \"absolute\",\n                        top: \"40px\",\n                        right: \"40px\",\n                        bottom: \"40px\",\n                        left: \"40px\",\n                        backgroundColor: theme.palette.primary.light,\n                        borderRadius: \"50%\",\n                        animation: \"pulse 2.5s ease-in-out alternate infinite\",\n                    },\n                }}\n            >\n                <SchoolIcon \n                    sx={{\n                        // fontSize: ,\n                        display: \"inline-block\",\n                        position: \"relative\",\n                        width: \"30px\",\n                        height: \"30px\",\n                        transform: \"rotate(45deg)\",\n                        animation: \"spin 2.5s cubic-bezier(0.75, 0, 0, 0.75) forwards infinite\",\n                    }}\n                />\n            </Stack>\n        </Stack>\n    );\n};\n\nexport default LoadingScreen;\n","\"use strict\"\r\n\r\n// Based on: https://github.com/lodash/lodash/blob/6018350ac10d5ce6a5b7db625140b82aeab804df/.internal/unicodeSize.js\r\n\r\nmodule.exports = () => {\r\n\t// Used to compose unicode character classes.\r\n\tconst astralRange = \"\\\\ud800-\\\\udfff\"\r\n\tconst comboMarksRange = \"\\\\u0300-\\\\u036f\"\r\n\tconst comboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\"\r\n\tconst comboSymbolsRange = \"\\\\u20d0-\\\\u20ff\"\r\n\tconst comboMarksExtendedRange = \"\\\\u1ab0-\\\\u1aff\"\r\n\tconst comboMarksSupplementRange = \"\\\\u1dc0-\\\\u1dff\"\r\n\tconst comboRange = comboMarksRange + comboHalfMarksRange + comboSymbolsRange + comboMarksExtendedRange + comboMarksSupplementRange\r\n\tconst varRange = \"\\\\ufe0e\\\\ufe0f\"\r\n\tconst familyRange = \"\\\\uD83D\\\\uDC69\\\\uD83C\\\\uDFFB\\\\u200D\\\\uD83C\\\\uDF93\"\r\n\r\n\t// Used to compose unicode capture groups.\r\n\tconst astral = `[${astralRange}]`\r\n\tconst combo = `[${comboRange}]`\r\n\tconst fitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\"\r\n\tconst modifier = `(?:${combo}|${fitz})`\r\n\tconst nonAstral = `[^${astralRange}]`\r\n\tconst regional = \"(?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF]){2}\"\r\n\tconst surrogatePair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\"\r\n\tconst zwj = \"\\\\u200d\"\r\n\tconst blackFlag = \"(?:\\\\ud83c\\\\udff4\\\\udb40\\\\udc67\\\\udb40\\\\udc62\\\\udb40(?:\\\\udc65|\\\\udc73|\\\\udc77)\\\\udb40(?:\\\\udc6e|\\\\udc63|\\\\udc6c)\\\\udb40(?:\\\\udc67|\\\\udc74|\\\\udc73)\\\\udb40\\\\udc7f)\"\r\n\tconst family = `[${familyRange}]`\r\n\r\n\t// Used to compose unicode regexes.\r\n\tconst optModifier = `${modifier}?`\r\n\tconst optVar = `[${varRange}]?`\r\n\tconst optJoin = `(?:${zwj}(?:${[nonAstral, regional, surrogatePair].join(\"|\")})${optVar + optModifier})*`\r\n\tconst seq = optVar + optModifier + optJoin\r\n\tconst nonAstralCombo = `${nonAstral}${combo}?`\r\n\tconst symbol = `(?:${[nonAstralCombo, combo, regional, surrogatePair, astral, family].join(\"|\")})`\r\n\r\n\t// Used to match [String symbols](https://mathiasbynens.be/notes/javascript-unicode).\r\n\treturn new RegExp(`${blackFlag}|${fitz}(?=${fitz})|${symbol + seq}`, \"g\")\r\n}\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nvar char_regex_1 = __importDefault(require(\"char-regex\"));\n/**\n * Converts a string to an array of string chars\n * @param {string} str The string to turn into array\n * @returns {string[]}\n */\nfunction toArray(str) {\n    if (typeof str !== 'string') {\n        throw new Error('A string is expected as input');\n    }\n    return str.match(char_regex_1.default()) || [];\n}\nexports.toArray = toArray;\n/**\n * Returns the length of a string\n *\n * @export\n * @param {string} str\n * @returns {number}\n */\nfunction length(str) {\n    // Check for input\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    var match = str.match(char_regex_1.default());\n    return match === null ? 0 : match.length;\n}\nexports.length = length;\n/**\n * Returns a substring by providing start and end position\n *\n * @export\n * @param {string} str\n * @param {number} [begin=0] Starting position\n * @param {number} end End position\n * @returns {string}\n */\nfunction substring(str, begin, end) {\n    if (begin === void 0) { begin = 0; }\n    // Check for input\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    // Even though negative numbers work here, theyre not in the spec\n    if (typeof begin !== 'number' || begin < 0) {\n        begin = 0;\n    }\n    if (typeof end === 'number' && end < 0) {\n        end = 0;\n    }\n    var match = str.match(char_regex_1.default());\n    if (!match)\n        return '';\n    return match.slice(begin, end).join('');\n}\nexports.substring = substring;\n/**\n * Returns a substring by providing start position and length\n *\n * @export\n * @param {string} str\n * @param {number} [begin=0] Starting position\n * @param {number} len Desired length\n * @returns {string}\n */\nfunction substr(str, begin, len) {\n    if (begin === void 0) { begin = 0; }\n    // Check for input\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    var strLength = length(str);\n    // Fix type\n    if (typeof begin !== 'number') {\n        begin = parseInt(begin, 10);\n    }\n    // Return zero-length string if got oversize number.\n    if (begin >= strLength) {\n        return '';\n    }\n    // Calculating postive version of negative value.\n    if (begin < 0) {\n        begin += strLength;\n    }\n    var end;\n    if (typeof len === 'undefined') {\n        end = strLength;\n    }\n    else {\n        // Fix type\n        if (typeof len !== 'number') {\n            len = parseInt(len, 10);\n        }\n        end = len >= 0 ? len + begin : begin;\n    }\n    var match = str.match(char_regex_1.default());\n    if (!match)\n        return '';\n    return match.slice(begin, end).join('');\n}\nexports.substr = substr;\n/**\n * Enforces a string to be a certain length by\n * adding or removing characters\n *\n * @export\n * @param {string} str\n * @param {number} [limit=16] Limit\n * @param {string} [padString='#'] The Pad String\n * @param {string} [padPosition='right'] The Pad Position\n * @returns {string}\n */\nfunction limit(str, limit, padString, padPosition) {\n    if (limit === void 0) { limit = 16; }\n    if (padString === void 0) { padString = '#'; }\n    if (padPosition === void 0) { padPosition = 'right'; }\n    // Input should be a string, limit should be a number\n    if (typeof str !== 'string' || typeof limit !== 'number') {\n        throw new Error('Invalid arguments specified');\n    }\n    // Pad position should be either left or right\n    if (['left', 'right'].indexOf(padPosition) === -1) {\n        throw new Error('Pad position should be either left or right');\n    }\n    // Pad string can be anything, we convert it to string\n    if (typeof padString !== 'string') {\n        padString = String(padString);\n    }\n    // Calculate string length considering astral code points\n    var strLength = length(str);\n    if (strLength > limit) {\n        return substring(str, 0, limit);\n    }\n    else if (strLength < limit) {\n        var padRepeats = padString.repeat(limit - strLength);\n        return padPosition === 'left' ? padRepeats + str : str + padRepeats;\n    }\n    return str;\n}\nexports.limit = limit;\n/**\n * Returns the index of the first occurrence of a given string\n *\n * @export\n * @param {string} str\n * @param {string} [searchStr] the string to search\n * @param {number} [pos] starting position\n * @returns {number}\n */\nfunction indexOf(str, searchStr, pos) {\n    if (pos === void 0) { pos = 0; }\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    if (str === '') {\n        if (searchStr === '') {\n            return 0;\n        }\n        return -1;\n    }\n    // fix type\n    pos = Number(pos);\n    pos = isNaN(pos) ? 0 : pos;\n    searchStr = String(searchStr);\n    var strArr = toArray(str);\n    if (pos >= strArr.length) {\n        if (searchStr === '') {\n            return strArr.length;\n        }\n        return -1;\n    }\n    if (searchStr === '') {\n        return pos;\n    }\n    var searchArr = toArray(searchStr);\n    var finded = false;\n    var index;\n    for (index = pos; index < strArr.length; index += 1) {\n        var searchIndex = 0;\n        while (searchIndex < searchArr.length &&\n            searchArr[searchIndex] === strArr[index + searchIndex]) {\n            searchIndex += 1;\n        }\n        if (searchIndex === searchArr.length &&\n            searchArr[searchIndex - 1] === strArr[index + searchIndex - 1]) {\n            finded = true;\n            break;\n        }\n    }\n    return finded ? index : -1;\n}\nexports.indexOf = indexOf;\n","import { limit, length } from \"stringz\";\nconst truncateText = (string, n) => {\n    if (!string) {\n        return string;\n    }\n    const truncatedText = limit(string, n, \"\");\n\n    if (length(truncatedText) < n) {\n        return truncatedText;\n    }\n    return truncatedText + \"…\";\n};\n\nexport default truncateText;","import { RootState } from \"@redux/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\ninterface Props {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    latestMessage: string;\n    activityStatus: string;\n    avatar: string;\n    unread: number;\n    onlineStatus: boolean;\n    isLoading: boolean;\n    convo_id: string;\n    fromContact: boolean;\n    toggleDrawer: () => void;\n}\n\nimport {\n    Badge,\n    Box,\n    Stack,\n    Typography,\n    Skeleton,\n    useTheme,\n    Avatar,\n} from \"@mui/material\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\n// redux imports\nimport StyledBadge from \"@components/StyledBadge\";\nimport truncateText from \"@utils/truncateText\";\nimport formatTime from \"@utils/timeFormatter\";\nimport { getOtherUser } from \"@utils/getOtherUsers\";\nimport { CreateOpenConversation } from \"@redux/actions/chat.actions\";\n\n\n\nconst AllChatElement = ({\n    _id,\n    fullname,\n    firstName,\n    name,\n    lastName,\n    latestMessage,\n    activityStatus,\n    avatar,\n    unread,\n    onlineStatus,\n    isLoading,\n    convo_id,\n    fromContact,\n    toggleDrawer,\n}) => {\n    // using theme\n    const theme = useTheme();\n\n    // from redux\n    const dispatch = useDispatch();\n    const { user, onlineFriends } = useSelector((state: RootState) => state.auth);\n    const { activeConversation, typingConversation } = useSelector(\n        (state: RootState) => state.chat\n    );\n\n    // ----------- inner functions -----------\n    const getIsActiveConvo = () => {\n        if (fromContact) {\n            const otherUser = getOtherUser(\n                activeConversation?.users,\n                user.id,\n                onlineFriends\n            );\n\n            return Boolean(otherUser && otherUser._id === _id);\n        } else if (activeConversation && convo_id) {\n            return activeConversation?._id === convo_id;\n        } else return false;\n    };\n\n    const isActiveConvo = getIsActiveConvo();\n\n    const handleConversation = () => {\n        if (!isActiveConvo && !isLoading) {\n\n            // if (fromContact) {\n            //     toggleDrawer(_id);\n            // } else {\n\n            dispatch(CreateOpenConversation(_id));\n            // }\n        }\n    };\n\n    const selectedChat = () => {\n        if (!activeConversation) {\n            return \"none\";\n        } else if (theme.palette.mode === \"dark\") {\n            return isActiveConvo ? theme.palette.primary.lighterFaded : \"none\";\n        } else {\n            return isActiveConvo ? theme.palette.primary.lighter : \"none\";\n        }\n    };\n\n    const setTyping = () => {\n        const typingObject = typingConversation?.find(\n            (obj) => obj.conversation_id === convo_id\n        );\n        return typingObject ? typingObject.typing : false;\n    };\n    const override = {\n        padding: \"5px\",\n        backgroundColor: `${theme.palette.primary.main}15`,\n        borderRadius: 20,\n    };\n\n    const isTyping = setTyping();\n\n    return (\n        <Box\n            sx={{\n                width: \"100%\",\n                borderRadius: 1,\n                backgroundColor: selectedChat,\n                cursor: !isActiveConvo && !isLoading ? \"pointer\" : \"default\",\n                transition: \"background-color 0.2s ease\",\n                \"&:hover\": {\n                    backgroundColor:\n                        !isActiveConvo && !isLoading && `${theme.palette.primary.main}20`,\n                },\n            }}\n            p={1.5}\n            onClick={handleConversation}\n        >\n            <Stack\n                direction={\"row\"}\n                alignItems={\"center\"}\n                justifyContent={\"space-between\"}\n            >\n                <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\n                    {/* Avatar and online status badge */}\n                    {isLoading ? (\n                        <Skeleton\n                            animation=\"wave\"\n                            variant=\"circular\"\n                            width={35}\n                            height={35}\n                        />\n                    ) : onlineStatus === \"online\" ? (\n                        <StyledBadge\n                            overlap=\"circular\"\n                            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                            variant=\"dot\"\n                        >\n                            {/* {getAvatar(avatar, firstName, theme)} */}\n                            <Avatar />\n\n                        </StyledBadge>\n                    ) : (\n                        // getAvatar(avatar, firstName, theme)\n                        <Avatar />\n                    )}\n\n                    {/* Name and message */}\n                    <Stack spacing={0.3}>\n                        <Typography variant=\"subtitle2\">\n                            {isLoading ? (\n                                <Skeleton animation=\"wave\" height={20} width=\"7em\" />\n                            ) : (\n                                `${fullname} ${_id === user._id ? \"(You)\" : \"\"}`\n                            )}\n                        </Typography>\n                        <Typography\n                            variant=\"caption\"\n                            sx={{ color: theme.palette.text.secondary, paddingTop: 0.8 }}\n                        >\n                            {isLoading ? (\n                                <Skeleton animation=\"wave\" height={20} width=\"12em\" />\n                            ) : isTyping ? (\n                                <Stack direction={\"row\"} alignItems={\"center\"} spacing={0.5}>\n                                    <Typography\n                                        variant=\"caption\"\n                                        sx={{\n                                            color: theme.palette.primary.main,\n                                            animation: \"fade 3s ease infinite\",\n                                            \"@keyframes fade\": {\n                                                \"0%\": {\n                                                    opacity: 0.5,\n                                                },\n                                                \"50%\": {\n                                                    opacity: 1,\n                                                },\n                                                \"100%\": {\n                                                    opacity: 0.5,\n                                                },\n                                            },\n                                        }}\n                                    >\n                                        Typing\n                                    </Typography>\n                                    <BeatLoader\n                                        size={5}\n                                        height={0.5}\n                                        width={1}\n                                        color={theme.palette.primary.main}\n                                        speedMultiplier={0.5}\n                                        margin={2}\n                                        cssOverride={override}\n                                    />\n                                </Stack>\n                            ) : (\n                                truncateText(\n                                    latestMessage\n                                        ? latestMessage?.sender?._id === user._id\n                                            ? `You: ${latestMessage.message}`\n                                            : latestMessage.message\n                                        : activityStatus,\n                                    20\n                                )\n                            )}\n                        </Typography>\n                    </Stack>\n                </Stack>\n\n                {/* Time and message badge */}\n                <Stack spacing={2} alignItems={\"center\"}>\n                    <Typography\n                        variant=\"caption\"\n                        sx={{\n                            fontWeight: 600,\n                            color: theme.palette.text.secondary,\n                            paddingBottom: 0.8,\n                            textWrap: \"nowrap\",\n                        }}\n                    >\n                        {isLoading ? (\n                            <Skeleton animation=\"wave\" height={20} width=\"3em\" />\n                        ) : (\n                            // formatTime(latestMessage?.updatedAt)\n                            <div>time</div>\n                        )}\n                    </Typography>\n                    {isLoading ? (\n                        <Skeleton\n                            animation=\"wave\"\n                            variant=\"circular\"\n                            width={15}\n                            height={15}\n                        />\n                    ) : (\n                        <Badge\n                            badgeContent={unread}\n                            max={9}\n                            sx={{\n                                paddingBottom: 1,\n                                \"& .MuiBadge-badge\": {\n                                    color: theme.palette.primary.main,\n                                    backgroundColor: `${theme.palette.primary.main}15`,\n                                },\n                            }}\n                        />\n                    )}\n                </Stack>\n            </Stack>\n        </Box>\n    );\n};\n\nexport default AllChatElement;\n","\n\ninterface MembersList {\n    _id: number;\n    firstName: string;\n    lastName: string;\n    avatar: string;\n    activityStatus: string;\n    msg: string;\n    time: string;\n    unread: number;\n    pinned: boolean;\n    online: boolean;\n}\n\ninterface Friend_Requests {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    avatar: string;\n    email: string;\n    createdAt: string;\n}\n\nexport const MembersList: MembersList[] = [\n    {\n        _id: 0,\n        firstName: \"Vaibhav\",\n        lastName: \"Mishra\",\n        avatar: \"\",\n        activityStatus: \"Hey there! I love using TwinkConnect ❤️\",\n        msg: \"Hello\",\n        time: \"9:36\",\n        unread: 2,\n        pinned: false,\n        online: true,\n    },\n    {\n        _id: 1,\n        firstName: \"Gaibhav\",\n        lastName: \"Mishra\",\n        avatar: \"\",\n        activityStatus: \"Hey there! I love using TwinkConnect ❤️\",\n        msg: \"Hello\",\n        time: \"9:36\",\n        unread: 0,\n        pinned: false,\n        online: true,\n    },\n    {\n        _id: 2,\n        firstName: \"Baibhav\",\n        lastName: \"Mishra\",\n        avatar: \"\",\n        activityStatus: \"Hey there! I love using TwinkConnect ❤️\",\n        msg: \"Hello\",\n        time: \"9:36\",\n        unread: 5,\n        pinned: false,\n        online: true,\n    },\n    {\n        _id: \"65787ea22c8433b199ced18d\",\n        firstName: \"Aaibhav\",\n        lastName: \"Mishra\",\n        avatar: \"\",\n        activityStatus: \"Hey there! I love using TwinkConnect ❤️\",\n        msg: \"Hello\",\n        time: \"9:36\",\n        unread: 0,\n        pinned: false,\n        online: true,\n    },\n];\n\n\nexport const Friend_Requests: Friend_Requests[] = [\n    {\n        _id: \"65870774cd86e8c7c9b358eb\",\n        firstName: \"User\",\n        lastName: \"1\",\n        avatar: \"\",\n        email: \"user@gmail.com\",\n        createdAt: \"2023-12-12T15:39:14.688+00:00\",\n    },\n    {\n        _id: \"65787ea22c8433b199ced18e\",\n        firstName: \"Akshat\",\n        lastName: \"Mishra\",\n        avatar: \"\",\n        email: \"akshat@gmail.com\",\n        createdAt: \"2023-12-12T15:39:14.688+00:00\",\n    },\n    {\n        _id: \"65bbb5db34b2e8f010a59452\",\n        firstName: \"Dhananjay\",\n        lastName: \"Jain\",\n        avatar: \"\",\n        email: \"dhananjay@gmail.com\",\n        createdAt: \"2023-12-12T15:39:14.688+00:00\",\n    },\n    {\n        _id: \"65d1f4411203451e7ea8b44b\",\n        firstName: \"Vipul\",\n        lastName: \"Kumar\",\n        avatar: \"\",\n        email: \"vipulk0000@gmail.com\",\n        createdAt: \"2023-12-12T15:39:14.688+00:00\",\n    },\n];"],"names":["LoadingScreen","fromChat","theme","useTheme","isAuthRoute","height","width","jsx","Stack","SchoolIcon","charRegex","astralRange","comboRange","varRange","familyRange","astral","combo","fitz","modifier","nonAstral","regional","surrogatePair","zwj","blackFlag","family","optModifier","optVar","optJoin","seq","symbol","__importDefault","this","mod","dist","char_regex_1","require$$0","toArray","str","length","match","length_1","substring","begin","end","substr","len","strLength","limit","padString","padPosition","padRepeats","limit_1","indexOf","searchStr","pos","strArr","searchArr","finded","index","searchIndex","truncateText","string","n","truncatedText","AllChatElement","_id","fullname","firstName","name","lastName","latestMessage","activityStatus","avatar","unread","onlineStatus","isLoading","convo_id","fromContact","toggleDrawer","dispatch","useDispatch","user","onlineFriends","useSelector","state","activeConversation","typingConversation","isActiveConvo","otherUser","getOtherUser","handleConversation","CreateOpenConversation","selectedChat","setTyping","typingObject","obj","override","isTyping","Box","jsxs","Skeleton","StyledBadge","Avatar","Typography","BeatLoader","_a","Badge","MembersList","Friend_Requests"],"mappings":"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","x_google_ignoreList":[1,2]}