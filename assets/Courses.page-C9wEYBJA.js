import{bd as t,be as a,c as o,n as c,r as l,j as d}from"./index-efvRp_Hx.js";const n={courses:[],isLoading:!1,error:null},i=t({name:"course",initialState:n,reducers:{fetchCoursesStart:e=>{e.isLoading=!0,e.error=null},fetchCoursesSuccess:(e,r)=>{e.courses=r.payload,e.isLoading=!1,e.error=null},fetchCoursesFailure:(e,r)=>{e.isLoading=!1,e.error=r.payload},fetchCourseByIdStart:e=>{e.isLoading=!0,e.error=null},fetchCourseByIdSuccess:(e,r)=>{e.courses=r.payload,e.isLoading=!1,e.error=null},fetchCourseByIdFailure:(e,r)=>{e.isLoading=!1,e.error=r.payload},createCourseStart:e=>{e.isLoading=!0,e.error=null},createCourseSuccess:(e,r)=>{e.courses=r.payload,e.isLoading=!1,e.error=null},createCourseFailure:(e,r)=>{e.isLoading=!1,e.error=r.payload},updateCourseStart:e=>{e.isLoading=!0,e.error=null},updateCourseSuccess:(e,r)=>{e.courses=r.payload,e.isLoading=!1,e.error=null},updateCourseFailure:(e,r)=>{e.isLoading=!1,e.error=r.payload},deleteCourseStart:e=>{e.isLoading=!0,e.error=null},deleteCourseSuccess:(e,r)=>{e.courses=e.courses.filter(s=>s._id!==r.payload),e.isLoading=!1,e.error=null},deleteCourseFailure:(e,r)=>{e.isLoading=!1,e.error=r.payload}}}),{fetchCoursesStart:C,fetchCoursesSuccess:f,fetchCoursesFailure:A,fetchCourseByIdStart:p,fetchCourseByIdSuccess:y,fetchCourseByIdFailure:P,createCourseStart:h,createCourseSuccess:S,createCourseFailure:v,updateCourseStart:g,updateCourseSuccess:L,updateCourseFailure:D,deleteCourseStart:F,deleteCourseSuccess:B,deleteCourseFailure:R}=i.actions,I=()=>async e=>{var r,s;try{e(C());const u=await a.getCourses();console.log(u),e(f(u.data.data))}catch(u){o.error(((s=(r=u.response)==null?void 0:r.data)==null?void 0:s.data)||"Failed to fetch courses",{autoClose:3e3})}},m=e=>async r=>{try{r(p());const s=await a.getCourseById(e);r(y(s.data.data))}catch(s){o.error(s.response.data.data||"Failed to fetch course",{autoClose:3e3})}},w=e=>async r=>{try{r(h());const s=await a.createCourse(e);return r(S(s.data.data)),s.data}catch(s){o.error(s.response.data.data||"Failed to fetch course",{autoClose:3e3})}},x=e=>async r=>{try{r(g());const s=await a.updateCourse(e,e.id);return r(L(s.data.data)),s.data}catch(s){o.error(s.response.data.data||"Failed to fetch course",{autoClose:3e3})}},j=e=>async r=>{try{r(F());const s=await a.deleteCourse(e);r(B(e)),o.info(s.message||"Course deleted successfully",{autoClose:3e3})}catch(s){o.error(s.response.data.data||"Failed to fetch course",{autoClose:3e3})}},E={fetchCourses:I,fetchCourseById:m,createCourse:w,updateCourse:x,deleteCourse:j};function _(){const e=c();return l.useEffect(()=>{e(E.fetchCourses())},[]),d.jsx("div",{children:"CoursesPage"})}export{_ as default};
